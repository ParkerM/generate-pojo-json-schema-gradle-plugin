/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.parkerm;

import org.gradle.testkit.runner.BuildResult;
import org.gradle.testkit.runner.GradleRunner;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.nio.file.Files;

import static org.assertj.core.api.Assertions.assertThat;

class GeneratePojoJsonSchemaPluginFunctionalTest {

    private static final String testProjectDir = "build/functionalTest";
    private static File projectDir;

    @BeforeAll
    static void setUp() {
         projectDir = new File(testProjectDir);
    }

    @Test
    void canRunTask() throws IOException {
        // Setup the test build
        Files.createDirectories(projectDir.toPath());
        writeString(new File(projectDir, "settings.gradle"), "");
        writeString(new File(projectDir, "build.gradle"),
            "plugins {" +
            "  id('io.github.parkerm.generate-pojo-json-schema')" +
            "}");

        // Run the build
        GradleRunner runner = GradleRunner.create();
        runner.forwardOutput();
        runner.withPluginClasspath();
        runner.withArguments("generateJsonSchema");
        runner.withProjectDir(projectDir);
        BuildResult result = runner.build();

        // Verify the result
        assertThat(result.getOutput()).contains("1 actionable task: 1 executed");
    }

    private void writeString(File file, String string) throws IOException {
        try (Writer writer = new FileWriter(file)) {
            writer.write(string);
        }
    }
}
